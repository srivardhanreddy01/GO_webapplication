name: CI/CD test

on:
  push:
    branches:
      - main

jobs:
  integration-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
          MYSQL_USER: ${{ secrets.DB_USER }}
          MYSQL_PORT: ${{ secrets.DB_PORT }}
          MYSQL_HOST: ${{ secrets.DB_HOST }}
        ports:
          - 3306:3306
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21.2

      - name: Wait for MySQL to be ready
        run: |
          until nc -z -v -w30 ${{ secrets.DB_HOST }} ${{ secrets.DB_PORT }}
          do
            echo "Waiting for MySQL to be ready..."
            sleep 5
          done

      - name: Install project dependencies
        run: |
          go get -d -v ./...
          go build -v

      - name: Run Integration tests
        run: |
          ls -ltr
          DB_HOST=${{ secrets.DB_HOST }} DB_PORT=${{ secrets.DB_PORT }} DB_USER=${{ secrets.DB_USER }} DB_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }} DB_NAME=${{ secrets.DB_DATABASE }} go test ./...

      - name: Building the artifacts
        run: zip -r webapplication_go.zip ./

      - name: Install Packer
        run: |
          curl -fsSL https://releases.hashicorp.com/packer/1.7.0/packer_1.7.0_linux_amd64.zip -o packer.zip
          unzip packer.zip
          sudo mv packer /usr/local/bin/
          packer --version
        if: success()

      - name: List Files
        run: ls

      - name: Initialize Packer
        run: packer init aws-debian.pkr.hcl

      - name: Format Packer Template
        run: packer fmt --check aws-debian.pkr.hcl
        continue-on-error: false

      - name: Validate Packer Template
        run: packer validate aws-debian.pkr.hcl

      - name: Build Packer image
        run: packer build aws-debian.pkr.hcl
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
